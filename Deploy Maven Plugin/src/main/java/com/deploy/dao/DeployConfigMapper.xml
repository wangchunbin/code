<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deploy.dao.DeployConfigMapper">
	<resultMap id="BaseResultMap" type="com.deploy.dao.DeployConfig">
		<id column="deploy_id" property="deployId" jdbcType="INTEGER" />
		<result column="git_remote_address" property="gitRemoteAddress"
			jdbcType="VARCHAR" />
		<result column="local_git_path" property="localGitPath"
			jdbcType="VARCHAR" />
		<result column="project_at_git_repository_path" property="projectAtGitRepositoryPath"
			jdbcType="VARCHAR" />
		<result column="branch" property="branch" jdbcType="VARCHAR" />
		<result column="git_remote_username" property="gitRemoteUsername"
			jdbcType="VARCHAR" />
		<result column="git_remote_email" property="gitRemoteEmail"
			jdbcType="VARCHAR" />
		<result column="git_remote_password" property="gitRemotePassword"
			jdbcType="VARCHAR" />
		<result column="backup_dir" property="backupDir" jdbcType="VARCHAR" />
		<result column="tomcat_project_dir" property="tomcatProjectDir"
			jdbcType="VARCHAR" />
		<result column="tomcat_port" property="tomcatPort" jdbcType="INTEGER" />
		<result column="driver_class_name" property="driverClassName"
			jdbcType="VARCHAR" />
		<result column="url" property="url" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="sql_at_git_repository_path" property="sqlAtGitRepositoryPath"
			jdbcType="VARCHAR" />
		<result column="separator" property="separator" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		deploy_id, git_remote_address, local_git_path,
		project_at_git_repository_path,
		branch,
		git_remote_username,
		git_remote_email, git_remote_password, backup_dir,
		tomcat_project_dir,
		tomcat_port, driver_class_name, url, username, password,
		sql_at_git_repository_path,
		separator
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from deploy_config
		where deploy_id = #{deployId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		deploy_config
		where deploy_id = #{deployId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.deploy.dao.DeployConfig">
		insert into deploy_config
		(deploy_id, git_remote_address,
		local_git_path,
		project_at_git_repository_path, branch, git_remote_username,
		git_remote_email, git_remote_password, backup_dir,
		tomcat_project_dir,
		tomcat_port, driver_class_name,
		url, username, password,
		sql_at_git_repository_path, separator)
		values (#{deployId,jdbcType=INTEGER},
		#{gitRemoteAddress,jdbcType=VARCHAR},
		#{localGitPath,jdbcType=VARCHAR},
		#{projectAtGitRepositoryPath,jdbcType=VARCHAR},
		#{branch,jdbcType=VARCHAR}, #{gitRemoteUsername,jdbcType=VARCHAR},
		#{gitRemoteEmail,jdbcType=VARCHAR},
		#{gitRemotePassword,jdbcType=VARCHAR}, #{backupDir,jdbcType=VARCHAR},
		#{tomcatProjectDir,jdbcType=VARCHAR}, #{tomcatPort,jdbcType=INTEGER},
		#{driverClassName,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{sqlAtGitRepositoryPath,jdbcType=VARCHAR}, #{separator,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.deploy.dao.DeployConfig">
		insert into deploy_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="deployId != null">
				deploy_id,
			</if>
			<if test="gitRemoteAddress != null">
				git_remote_address,
			</if>
			<if test="localGitPath != null">
				local_git_path,
			</if>
			<if test="projectAtGitRepositoryPath != null">
				project_at_git_repository_path,
			</if>
			<if test="branch != null">
				branch,
			</if>
			<if test="gitRemoteUsername != null">
				git_remote_username,
			</if>
			<if test="gitRemoteEmail != null">
				git_remote_email,
			</if>
			<if test="gitRemotePassword != null">
				git_remote_password,
			</if>
			<if test="backupDir != null">
				backup_dir,
			</if>
			<if test="tomcatProjectDir != null">
				tomcat_project_dir,
			</if>
			<if test="tomcatPort != null">
				tomcat_port,
			</if>
			<if test="driverClassName != null">
				driver_class_name,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="sqlAtGitRepositoryPath != null">
				sql_at_git_repository_path,
			</if>
			<if test="separator != null">
				separator,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="deployId != null">
				#{deployId,jdbcType=INTEGER},
			</if>
			<if test="gitRemoteAddress != null">
				#{gitRemoteAddress,jdbcType=VARCHAR},
			</if>
			<if test="localGitPath != null">
				#{localGitPath,jdbcType=VARCHAR},
			</if>
			<if test="projectAtGitRepositoryPath != null">
				#{projectAtGitRepositoryPath,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				#{branch,jdbcType=VARCHAR},
			</if>
			<if test="gitRemoteUsername != null">
				#{gitRemoteUsername,jdbcType=VARCHAR},
			</if>
			<if test="gitRemoteEmail != null">
				#{gitRemoteEmail,jdbcType=VARCHAR},
			</if>
			<if test="gitRemotePassword != null">
				#{gitRemotePassword,jdbcType=VARCHAR},
			</if>
			<if test="backupDir != null">
				#{backupDir,jdbcType=VARCHAR},
			</if>
			<if test="tomcatProjectDir != null">
				#{tomcatProjectDir,jdbcType=VARCHAR},
			</if>
			<if test="tomcatPort != null">
				#{tomcatPort,jdbcType=INTEGER},
			</if>
			<if test="driverClassName != null">
				#{driverClassName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="sqlAtGitRepositoryPath != null">
				#{sqlAtGitRepositoryPath,jdbcType=VARCHAR},
			</if>
			<if test="separator != null">
				#{separator,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.deploy.dao.DeployConfig">
		update deploy_config
		<set>
			<if test="gitRemoteAddress != null">
				git_remote_address =
				#{gitRemoteAddress,jdbcType=VARCHAR},
			</if>
			<if test="localGitPath != null">
				local_git_path = #{localGitPath,jdbcType=VARCHAR},
			</if>
			<if test="projectAtGitRepositoryPath != null">
				project_at_git_repository_path =
				#{projectAtGitRepositoryPath,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				branch = #{branch,jdbcType=VARCHAR},
			</if>
			<if test="gitRemoteUsername != null">
				git_remote_username =
				#{gitRemoteUsername,jdbcType=VARCHAR},
			</if>
			<if test="gitRemoteEmail != null">
				git_remote_email = #{gitRemoteEmail,jdbcType=VARCHAR},
			</if>
			<if test="gitRemotePassword != null">
				git_remote_password =
				#{gitRemotePassword,jdbcType=VARCHAR},
			</if>
			<if test="backupDir != null">
				backup_dir = #{backupDir,jdbcType=VARCHAR},
			</if>
			<if test="tomcatProjectDir != null">
				tomcat_project_dir =
				#{tomcatProjectDir,jdbcType=VARCHAR},
			</if>
			<if test="tomcatPort != null">
				tomcat_port = #{tomcatPort,jdbcType=INTEGER},
			</if>
			<if test="driverClassName != null">
				driver_class_name = #{driverClassName,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				url = #{url,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="sqlAtGitRepositoryPath != null">
				sql_at_git_repository_path =
				#{sqlAtGitRepositoryPath,jdbcType=VARCHAR},
			</if>
			<if test="separator != null">
				separator = #{separator,jdbcType=VARCHAR},
			</if>
		</set>
		where deploy_id = #{deployId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.deploy.dao.DeployConfig">
		update
		deploy_config
		set git_remote_address =
		#{gitRemoteAddress,jdbcType=VARCHAR},
		local_git_path =
		#{localGitPath,jdbcType=VARCHAR},
		project_at_git_repository_path =
		#{projectAtGitRepositoryPath,jdbcType=VARCHAR},
		branch =
		#{branch,jdbcType=VARCHAR},
		git_remote_username =
		#{gitRemoteUsername,jdbcType=VARCHAR},
		git_remote_email =
		#{gitRemoteEmail,jdbcType=VARCHAR},
		git_remote_password =
		#{gitRemotePassword,jdbcType=VARCHAR},
		backup_dir =
		#{backupDir,jdbcType=VARCHAR},
		tomcat_project_dir =
		#{tomcatProjectDir,jdbcType=VARCHAR},
		tomcat_port =
		#{tomcatPort,jdbcType=INTEGER},
		driver_class_name =
		#{driverClassName,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		sql_at_git_repository_path =
		#{sqlAtGitRepositoryPath,jdbcType=VARCHAR},
		separator =
		#{separator,jdbcType=VARCHAR}
		where deploy_id =
		#{deployId,jdbcType=INTEGER}
	</update>
</mapper>